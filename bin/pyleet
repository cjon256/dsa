#!/usr/bin/env python3

# parse subcommand create, test and submit (assume python3)

import argparse
import os

import leetopenlib

# load environment variable for PYLEETCODE
base_path = os.environ.get("LEET_CODE_PATH")
leetcode_path = os.path.expanduser("~/.leetcode")

argparser = argparse.ArgumentParser(description="leet")
argparser.add_argument("-f", action="store_true", help="force overwrite")
argparser.add_argument(
    "subcommand", choices=["create", "c", "test", "t", "submit", "x"]
)
argparser.add_argument("problem", help="problem number")
args = argparser.parse_args()

problem_id = args.problem
problem_name = leetopenlib.lookup_problem(problem_id)

if problem_name is None:
    print(f"problem {problem_id} not found")
    exit(1)

filename = f"{int(problem_id):04d}.{problem_name}.py"
leetcode_path = f"{leetcode_path}/code/{problem_id}.{problem_name}.py"
local_path = f"{base_path}/python/{filename}"
leetcode_python_config_path = (
    os.path.expanduser("~/.leetcode") + "/leetcode-python.toml"
)
leetcode_config_path = os.path.expanduser("~/.leetcode") + "/leetcode.toml"

print(f"problem {problem_id} {problem_name} {args.subcommand}")

if args.subcommand == "create" or args.subcommand == "c":
    if os.path.exists(local_path) and not args.f:
        print(f"python/{filename} already exists")
        exit(1)
    if not os.path.exists(leetcode_python_config_path):
        os.system("cd ~/.leetcode && make")
    os.system(f"cp {leetcode_python_config_path} {leetcode_config_path}")
    os.system(f"leetcode edit {problem_id}")
    os.system(f"mv {leetcode_path} {local_path}")
    os.system(r"gsed -i '/^    def /a\        pass' " + local_path)
    os.system(f"cat {base_path}/lib/share/pyleet/test-block.py >> {local_path}")
    print(f"created python/{filename}")
elif args.subcommand == "test" or args.subcommand == "t":
    print(f"testing {filename}")
    os.system(f"cp {local_path} {leetcode_path}")
    os.system(f"leetcode test {problem_id}")
elif args.subcommand == "submit" or args.subcommand == "x":
    print(f"submitting {filename}")
    os.system(f"cp {local_path} {leetcode_path}")
    os.system(f"leetcode exec {problem_id}")
else:
    print("unknown subcommand")
    exit(1)
